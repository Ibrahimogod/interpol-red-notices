using System;
using System.Collections.Generic;
using System.Text;

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;


// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using RED_Notice_App.Models;
//
//    var welcome = Welcome.FromJson(jsonString);

namespace RED_Notice_App.Models
{
    public partial class NoticeInfo
    {
        [JsonProperty("arrest_warrants")]
        public List<ArrestWarrant> ArrestWarrants { get; set; }

        [JsonProperty("weight")]
        public object Weight { get; set; }

        [JsonProperty("forename")]
        public string Forename { get; set; }

        [JsonProperty("date_of_birth")]
        public string DateOfBirth { get; set; }

        [JsonProperty("entity_id")]
        public string EntityId { get; set; }

        [JsonProperty("languages_spoken_ids")]
        public List<string> LanguagesSpokenIds { get; set; }

        [JsonProperty("nationalities")]
        public List<string> Nationalities { get; set; }

        [JsonProperty("height")]
        public object Height { get; set; }

        [JsonProperty("sex_id")]
        public string SexId { get; set; }

        [JsonProperty("country_of_birth_id")]
        public string CountryOfBirthId { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("distinguishing_marks")]
        public object DistinguishingMarks { get; set; }

        [JsonProperty("eyes_colors_id")]
        public List<string> EyesColorsId { get; set; }

        [JsonProperty("hairs_id")]
        public List<string> HairsId { get; set; }

        [JsonProperty("place_of_birth")]
        public string PlaceOfBirth { get; set; }

        [JsonProperty("_embedded")]
        public NoticeEmbedded Embedded { get; set; }

        [JsonProperty("_links")]
        public Links Links { get; set; }
    }

    public partial class ArrestWarrant
    {
        [JsonProperty("issuing_country_id")]
        public string IssuingCountryId { get; set; }

        [JsonProperty("charge")]
        public string Charge { get; set; }

        [JsonProperty("charge_translation")]
        public object ChargeTranslation { get; set; }
    }

    public partial class NoticeEmbedded
    {
        [JsonProperty("links")]
        public List<object> Links { get; set; }
    }

    public partial class Links
    {
        [JsonProperty("self")]
        public Images Self { get; set; }

        [JsonProperty("images")]
        public Images Images { get; set; }

        [JsonProperty("thumbnail")]
        public Images Thumbnail { get; set; }
    }

    public partial class Images
    {
        [JsonProperty("href")]
        public Uri Href { get; set; }
    }

    public partial class NoticeInfo
    {
        public static NoticeInfo FromJson(string json) => JsonConvert.DeserializeObject<NoticeInfo>(json, Converter.Settings);
    }

    public static partial class Serialize
    {
        public static string ToJson(this NoticeInfo self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }
}

